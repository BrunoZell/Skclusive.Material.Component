@namespace Skclusive.Material.Button
@inherits ButtonCommon

@if (Navigation)
{
    <Component
        RootRef="@RootRef"
        ChildRef="@ChildRef"
        type="@_Type"
        href="@Href"
        id="@Id"
        Tag="@_Component"
        Class="@_Class"
        Style="@_Style"
        @ref="Control"
        Role="@Role"
        Disabled="@Disabled"
        Tabindex="@((Disabled.HasValue && Disabled.Value) ? -1 : TabIndex)"
        OnClickStop="@OnClickStop"
        OnClickPrevent="@OnClickPrevent"
        @attributes="Attributes">
        @ChildContent(context)
        @if(!DisableRipple && !(Disabled.HasValue && Disabled.Value))
        {
            <TouchRipple
                Center="@CenterRipple"
                @ref="Ripple"/>
        }
    </Component>
}
else
{
    <Component
        RootRef="@RootRef"
        ChildRef="@ChildRef"
        type="@_Type"
        id="@Id"
        Tag="@_Component"
        Class="@_Class"
        Style="@_Style"
        @ref="Control"
        Role="@Role"
        Disabled="@Disabled"
        Tabindex="@((Disabled.HasValue && Disabled.Value) ? -1 : TabIndex)"
        OnFocus="@HandleFocus"
        OnBlur="@HandleBlurAsync"
        OnKeyDown="@HandleKeyDownAsync"
        OnKeyUp="@HandleKeyUp"
        OnMouseDown="@HandleMouseDownAsync"
        OnMouseUp="@HandleMouseUpAsync"
        OnMouseLeave="@HandleMouseLeaveAsync"
        OnTouchMove="@HandleTouchMoveAsync"
        OnTouchEnd="@HandleTouchEndAsync"
        OnDragLeave="@HandleDragLeaveAsync"
        OnClick="@HandleClick"
        OnClickStop="@OnClickStop"
        OnClickPrevent="@OnClickPrevent"
        @attributes="Attributes">
        @ChildContent(context)
        @if(!DisableRipple && !(Disabled.HasValue && Disabled.Value))
        {
            <TouchRipple
                Center="@CenterRipple"
                @ref="Ripple"/>
        }
    </Component>
}
