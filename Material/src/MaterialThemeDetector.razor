@implements IAsyncDisposable
@inject IThemeService ThemeService
@inject DetectThemeHelper DetectThemeHelper

@code
{
   private IDisposable TimeoutDisposal { set; get; }

    protected override Task OnInitializedAsync()
    {
        DetectThemeHelper.OnChange += OnThemeChanged;

        TimeoutDisposal = ExecutionPlan.Delay(500, () => {
            _ = DetectThemeHelper.InitAsync();
        });

        return Task.CompletedTask;
    }

    protected void OnThemeChanged(object sender, Theme theme)
    {
        ThemeService.ChangeTheme(theme);
    }

    public ValueTask DisposeAsync()
    {
        TimeoutDisposal?.Dispose();

        DetectThemeHelper.OnChange -= OnThemeChanged;

        return DetectThemeHelper.DisposeAsync();
    }
}